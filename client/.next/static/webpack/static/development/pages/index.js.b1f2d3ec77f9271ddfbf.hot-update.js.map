{"version":3,"file":"static/webpack/static/development/pages/index.js.b1f2d3ec77f9271ddfbf.hot-update.js","sources":["webpack:///./lib/secureRoute.js"],"sourcesContent":["import Router from 'next/router'\nimport nextCookie from 'next-cookies'\nimport { Query } from 'react-apollo'\nimport { SINGLE_USER_QUERY } from '../lib/query'\n \nconst secureRoute = (Component) => {\n\n  class Wrapper extends React.Component {\n    render() {\n      return (\n        <Query query={SINGLE_USER_QUERY}>\n          {({ data, error }) => {\n            if (error) {\n              // ! really need to find a better way to do this, ideally I make this query in get intial props\n              Router.push('/login')\n              return null\n            }\n            return <Component {...data}/>\n          }}\n        </Query>\n      )\n    }\n  }\n\n  Wrapper.getInitialProps = async (ctx) => {\n    const { token } = nextCookie(ctx)\n    // ? maybe something with the apollo cache? or make a query without the query component\n    if (!token && ctx.res) {\n      ctx.res.writeHead(302, { Location: '/login' })\n      ctx.res.end()\n      return\n    } \n\n    if (!token) {\n      Router.push('/login')\n    }\n    return { token }\n  }\n  \n  return Wrapper\n}\n\nexport default secureRoute"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAhBA;AACA;AADA;AAAA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AALA;AACA;AADA;AASA;AACA;AACA;AACA;AAZA;AAYA;AAAA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;;;;A","sourceRoot":""}