{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/jackmay/learning-dev/graphql-app/jackstagram/client/components/Posts.js\";\nimport React from \"react\";\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Post from './Post';\nconst ALL_POSTS_QUERY = gql`\n  query ALL_POSTS_QUERY {\n    posts {\n      id\n      content\n      image\n      owner {\n        username\n      }\n      likes {\n        id\n      }\n    }\n  }\n`;\n\nconst Posts = () => React.createElement(Query, {\n  query: ALL_POSTS_QUERY,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, ({\n  data,\n  error,\n  loading\n}) => {\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Error\");\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"..Loading\");\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, data.posts.map(post => React.createElement(Post, _extends({\n    key: post.id\n  }, post, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))));\n});\n\nexport default Posts;","map":{"version":3,"sources":["/Users/jackmay/learning-dev/graphql-app/jackstagram/client/components/Posts.js"],"names":["Query","gql","Post","ALL_POSTS_QUERY","Posts","data","error","loading","posts","map","post","id"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,eAAe,GAAGF,GAAI;;;;;;;;;;;;;;CAA5B;;AAgBA,MAAMG,KAAK,GAAG,MACV,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAED,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAACE,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAA4B;AAC3B,MAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACb,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,KAAwBD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB,CADH,CADF;AAKD,CATH,CADJ;;AAcA,eAAeN,KAAf","sourcesContent":["import { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Post from './Post'\n\nconst ALL_POSTS_QUERY = gql`\n  query ALL_POSTS_QUERY {\n    posts {\n      id\n      content\n      image\n      owner {\n        username\n      }\n      likes {\n        id\n      }\n    }\n  }\n`\n\nconst Posts = () => (\n    <Query query={ALL_POSTS_QUERY}>\n      {({data, error, loading}) => {\n        if (error) return <p>Error</p>\n        if (loading) return <p>..Loading</p>\n        return (\n          <React.Fragment>\n            {data.posts.map(post => <Post key={post.id} {...post} />)}\n          </React.Fragment>\n        )\n      }}\n    </Query>\n)\n\nexport default Posts"]},"metadata":{},"sourceType":"module"}