{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/jackmay/learning-dev/graphql-app/jackstagram/client/components/posts/Posts.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Query } from 'react-apollo';\nimport { ALL_POSTS_QUERY } from '../../lib/query';\nimport Post from './Post';\n\nvar Posts = function Posts() {\n  return __jsx(Query, {\n    query: ALL_POSTS_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        error = _ref.error,\n        loading = _ref.loading;\n    if (error) return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Error\");\n    if (loading) return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"..Loading\");\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, data.posts.map(function (post) {\n      return __jsx(Post, _extends({\n        key: post.id\n      }, post, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }));\n    }));\n  });\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/jackmay/learning-dev/graphql-app/jackstagram/client/components/posts/Posts.js"],"names":["Query","ALL_POSTS_QUERY","Post","Posts","data","error","loading","posts","map","post","id"],"mappings":";;;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SACZ,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAA8B;AAAA,QAA3BG,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,KAAqB,QAArBA,KAAqB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AAC7B,QAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACX,QAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,WACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA,aAAI,MAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,SAAwBD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KAAnB,CADH,CADF;AAKD,GATH,CADY;AAAA,CAAd;;AAcA,eAAeN,KAAf","sourcesContent":["import { Query } from 'react-apollo'\nimport { ALL_POSTS_QUERY } from '../../lib/query'\nimport Post from './Post'\n\nconst Posts = () => (\n  <Query query={ALL_POSTS_QUERY}>\n    {({ data, error, loading }) => {\n      if (error) return <p>Error</p>\n      if (loading) return <p>..Loading</p>\n      return (\n        <React.Fragment>\n          {data.posts.map(post => <Post key={post.id} {...post} />)}\n        </React.Fragment>\n      )\n    }}\n  </Query>\n)\n\nexport default Posts"]},"metadata":{},"sourceType":"module"}