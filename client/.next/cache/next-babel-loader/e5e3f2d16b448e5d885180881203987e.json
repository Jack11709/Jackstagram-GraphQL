{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jackmay/learning-dev/graphql-app/jackstagram/client/components/Posts.js\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_POSTS_QUERY {\\n    posts {\\n      id\\n      content\\n      image\\n      owner {\\n        username\\n      }\\n      likes {\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Post from './Post';\nvar ALL_POSTS_QUERY = gql(_templateObject());\n\nvar Posts = function Posts() {\n  return React.createElement(Query, {\n    query: ALL_POSTS_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        error = _ref.error,\n        loading = _ref.loading;\n    if (error) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Error\");\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"..Loading\");\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, data.posts.map(function (post) {\n      return React.createElement(Post, _extends({\n        key: post.id\n      }, post, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }));\n  });\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/jackmay/learning-dev/graphql-app/jackstagram/client/components/Posts.js"],"names":["Query","gql","Post","ALL_POSTS_QUERY","Posts","data","error","loading","posts","map","post","id"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,eAAe,GAAGF,GAAH,mBAArB;;AAgBA,IAAMG,KAAK,GAAG,SAARA,KAAQ;AAAA,SACV,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAA4B;AAAA,QAA1BE,IAA0B,QAA1BA,IAA0B;AAAA,QAApBC,KAAoB,QAApBA,KAAoB;AAAA,QAAbC,OAAa,QAAbA,OAAa;AAC3B,QAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACX,QAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA,aAAI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,SAAwBD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KAAnB,CADH,CADF;AAKD,GATH,CADU;AAAA,CAAd;;AAcA,eAAeN,KAAf","sourcesContent":["import { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Post from './Post'\n\nconst ALL_POSTS_QUERY = gql`\n  query ALL_POSTS_QUERY {\n    posts {\n      id\n      content\n      image\n      owner {\n        username\n      }\n      likes {\n        id\n      }\n    }\n  }\n`\n\nconst Posts = () => (\n    <Query query={ALL_POSTS_QUERY}>\n      {({data, error, loading}) => {\n        if (error) return <p>Error</p>\n        if (loading) return <p>..Loading</p>\n        return (\n          <React.Fragment>\n            {data.posts.map(post => <Post key={post.id} {...post} />)}\n          </React.Fragment>\n        )\n      }}\n    </Query>\n)\n\nexport default Posts"]},"metadata":{},"sourceType":"module"}