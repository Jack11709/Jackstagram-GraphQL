{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jackmay/learning-dev/graphql-app/jackstagram/client/lib/secureRoute.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport { Query } from 'react-apollo';\nimport { SINGLE_USER_QUERY } from '../lib/query';\n\nvar secureRoute = function secureRoute(Component) {\n  var Wrapper =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(Wrapper, _React$Component);\n\n    function Wrapper() {\n      _classCallCheck(this, Wrapper);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(Wrapper).apply(this, arguments));\n    }\n\n    _createClass(Wrapper, [{\n      key: \"render\",\n      value: function render() {\n        return __jsx(Query, {\n          query: SINGLE_USER_QUERY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, function (_ref) {\n          var data = _ref.data,\n              error = _ref.error;\n\n          if (error) {\n            // ! really need to find a better way to do this, ideally I make this query in get intial props\n            Router.push('/login');\n            return null;\n          }\n\n          return __jsx(Component, _extends({}, data, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }));\n        });\n      }\n    }]);\n\n    return Wrapper;\n  }(React.Component);\n\n  Wrapper.getInitialProps =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(ctx) {\n      var _nextCookie, token;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _nextCookie = nextCookie(ctx), token = _nextCookie.token; // ? maybe something with the apollo cache? or make a query without the query component\n\n              if (!(!token && ctx.res)) {\n                _context.next = 5;\n                break;\n              }\n\n              ctx.res.writeHead(302, {\n                Location: '/login'\n              });\n              ctx.res.end();\n              return _context.abrupt(\"return\");\n\n            case 5:\n              if (!token) {\n                Router.push('/login');\n              }\n\n              return _context.abrupt(\"return\", {\n                token: token\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return Wrapper;\n};\n\nexport default secureRoute;","map":{"version":3,"sources":["/Users/jackmay/learning-dev/graphql-app/jackstagram/client/lib/secureRoute.js"],"names":["Router","nextCookie","Query","SINGLE_USER_QUERY","secureRoute","Component","Wrapper","data","error","push","React","getInitialProps","ctx","token","res","writeHead","Location","end"],"mappings":";;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAe;AAAA,MAE3BC,OAF2B;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAGtB;AACP,eACE,MAAC,KAAD;AAAO,UAAA,KAAK,EAAEH,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,gBAAqB;AAAA,cAAlBI,IAAkB,QAAlBA,IAAkB;AAAA,cAAZC,KAAY,QAAZA,KAAY;;AACpB,cAAIA,KAAJ,EAAW;AACT;AACAR,YAAAA,MAAM,CAACS,IAAP,CAAY,QAAZ;AACA,mBAAO,IAAP;AACD;;AACD,iBAAO,MAAC,SAAD,eAAeF,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,SARH,CADF;AAYD;AAhB8B;;AAAA;AAAA,IAEXG,KAAK,CAACL,SAFK;;AAmBjCC,EAAAA,OAAO,CAACK,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA0B,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACNX,UAAU,CAACW,GAAD,CADJ,EAChBC,KADgB,eAChBA,KADgB,EAExB;;AAFwB,oBAGpB,CAACA,KAAD,IAAUD,GAAG,CAACE,GAHM;AAAA;AAAA;AAAA;;AAItBF,cAAAA,GAAG,CAACE,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAAvB;AACAJ,cAAAA,GAAG,CAACE,GAAJ,CAAQG,GAAR;AALsB;;AAAA;AASxB,kBAAI,CAACJ,KAAL,EAAY;AACVb,gBAAAA,MAAM,CAACS,IAAP,CAAY,QAAZ;AACD;;AAXuB,+CAYjB;AAAEI,gBAAAA,KAAK,EAALA;AAAF,eAZiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1B;;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAOP,OAAP;AACD,CAnCD;;AAqCA,eAAeF,WAAf","sourcesContent":["import Router from 'next/router'\nimport nextCookie from 'next-cookies'\nimport { Query } from 'react-apollo'\nimport { SINGLE_USER_QUERY } from '../lib/query'\n \nconst secureRoute = (Component) => {\n\n  class Wrapper extends React.Component {\n    render() {\n      return (\n        <Query query={SINGLE_USER_QUERY}>\n          {({ data, error }) => {\n            if (error) {\n              // ! really need to find a better way to do this, ideally I make this query in get intial props\n              Router.push('/login')\n              return null\n            }\n            return <Component {...data}/>\n          }}\n        </Query>\n      )\n    }\n  }\n\n  Wrapper.getInitialProps = async (ctx) => {\n    const { token } = nextCookie(ctx)\n    // ? maybe something with the apollo cache? or make a query without the query component\n    if (!token && ctx.res) {\n      ctx.res.writeHead(302, { Location: '/login' })\n      ctx.res.end()\n      return\n    } \n\n    if (!token) {\n      Router.push('/login')\n    }\n    return { token }\n  }\n  \n  return Wrapper\n}\n\nexport default secureRoute"]},"metadata":{},"sourceType":"module"}