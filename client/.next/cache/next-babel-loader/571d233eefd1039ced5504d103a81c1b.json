{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/jackmay/learning-dev/graphql-app/jackstagram/client/lib/secureRoute.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport { Query } from 'react-apollo';\nimport { SINGLE_USER_QUERY } from '../lib/query';\n\nconst secureRoute = Component => {\n  class Wrapper extends React.Component {\n    render() {\n      return __jsx(Query, {\n        query: SINGLE_USER_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, ({\n        data,\n        error\n      }) => {\n        if (error) {\n          // ! really need to find a better way to do this, ideally I make this query in get intial props\n          Router.push('/login');\n          return null;\n        }\n\n        return __jsx(Component, _extends({}, data, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      });\n    }\n\n  }\n\n  Wrapper.getInitialProps = async ctx => {\n    const {\n      token\n    } = nextCookie(ctx);\n\n    if (!token && ctx.res) {\n      ctx.res.writeHead(302, {\n        Location: '/login'\n      });\n      ctx.res.end();\n      return;\n    }\n\n    if (!token) {\n      Router.push('/login');\n    }\n\n    return {\n      token\n    };\n  };\n\n  return Wrapper;\n};\n\nexport default secureRoute;","map":{"version":3,"sources":["/Users/jackmay/learning-dev/graphql-app/jackstagram/client/lib/secureRoute.js"],"names":["Router","nextCookie","Query","SINGLE_USER_QUERY","secureRoute","Component","Wrapper","React","render","data","error","push","getInitialProps","ctx","token","res","writeHead","Location","end"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA,MAAMC,WAAW,GAAIC,SAAD,IAAe;AAEjC,QAAMC,OAAN,SAAsBC,KAAK,CAACF,SAA5B,CAAsC;AACpCG,IAAAA,MAAM,GAAG;AACP,aACE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAEL,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC;AAAEM,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAD,KAAqB;AACpB,YAAIA,KAAJ,EAAW;AACT;AACAV,UAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ;AACA,iBAAO,IAAP;AACD;;AACD,eAAO,MAAC,SAAD,eAAeF,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OARH,CADF;AAYD;;AAdmC;;AAiBtCH,EAAAA,OAAO,CAACM,eAAR,GAA0B,MAAOC,GAAP,IAAe;AACvC,UAAM;AAAEC,MAAAA;AAAF,QAAYb,UAAU,CAACY,GAAD,CAA5B;;AACA,QAAI,CAACC,KAAD,IAAUD,GAAG,CAACE,GAAlB,EAAuB;AACrBF,MAAAA,GAAG,CAACE,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAvB;AACAJ,MAAAA,GAAG,CAACE,GAAJ,CAAQG,GAAR;AACA;AACD;;AAED,QAAI,CAACJ,KAAL,EAAY;AACVd,MAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ;AACD;;AACD,WAAO;AAAEG,MAAAA;AAAF,KAAP;AACD,GAZD;;AAcA,SAAOR,OAAP;AACD,CAlCD;;AAoCA,eAAeF,WAAf","sourcesContent":["import Router from 'next/router'\nimport nextCookie from 'next-cookies'\nimport { Query } from 'react-apollo'\nimport { SINGLE_USER_QUERY } from '../lib/query'\n \nconst secureRoute = (Component) => {\n\n  class Wrapper extends React.Component {\n    render() {\n      return (\n        <Query query={SINGLE_USER_QUERY}>\n          {({ data, error }) => {\n            if (error) {\n              // ! really need to find a better way to do this, ideally I make this query in get intial props\n              Router.push('/login')\n              return null\n            }\n            return <Component {...data}/>\n          }}\n        </Query>\n      )\n    }\n  }\n\n  Wrapper.getInitialProps = async (ctx) => {\n    const { token } = nextCookie(ctx)\n    if (!token && ctx.res) {\n      ctx.res.writeHead(302, { Location: '/login' })\n      ctx.res.end()\n      return\n    } \n\n    if (!token) {\n      Router.push('/login')\n    }\n    return { token }\n  }\n  \n  return Wrapper\n}\n\nexport default secureRoute"]},"metadata":{},"sourceType":"module"}